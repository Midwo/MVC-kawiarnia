@model MVC_kawiarnia.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Product</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductId)

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ProductName, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="newFiles" name="newFiles" onchange="loadFile(event)" multiple />
            @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="selectedFiles">


    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryProductNameId, "CategoryProductNameId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoryProductNameId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryProductNameId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @{
        string x = "";
        string y = "";

        switch (Model.CategoryProductNameId)
        {
            case 1:
                x = "Appetizers";
                y = "przystawki";
                break;
            case 2:
                x = "Soups";
                y = "zupy";
                break;
            case 3:
                x = "Dinners";
                y = "obiady";
                break;
            case 4:
                x = "Desserts";
                y = "desery";
                break;
            case 5:
                x = "Coffees";
                y = "kawy";
                break;
            case 6:
                x = "Teas";
                y = "herbaty";
                break;
            default:
                x = "Index";
                y = "główna";
                break;
        }

        @Html.ActionLink("Wróć do listy " + y + "", x);
    }
    |
    @Html.ActionLink("Wróć do listy wszystkich", "Index")


</div>

<script>
    var selDiv = "";
    var storedFiles = [];

    $(document).ready(function () {
        $("#newFiles").on("change", handleFileSelect);

        selDiv = $("#selectedFiles");
        $("#myForm").on("submit", handleForm);

    });

    function handleFileSelect(e) {

        var files = e.target.files;
        var filesArr = Array.prototype.slice.call(files);
        with (document.getElementById('selectedFiles')) while (hasChildNodes()) removeChild(firstChild)
        filesArr.forEach(function (f) {

            if (!f.type.match("image.*")) {
                return;
            }
            storedFiles.push(f);

            var reader = new FileReader();
            reader.onload = function (e) {
                var html = "<label class= \"control-label col-md-2\" for=\"Files\">Dodane zdjęcie</label><div class=\"col-md-10 img_small\"><img src=\"" + e.target.result + "\" data-file='" + f.name + "'title='Nowe zdjęcie'>" + f.name + "<br clear=\"left\"/></div>";
                selDiv.append(html);
            }

            reader.readAsDataURL(f);
        });

    }
</script>